service: mug-space-server

plugins:
  - serverless-domain-manager

custom:
  customDomains:
    - domainName: api.mug-space.io
      basePath: ''
      certificateArn: arn:aws:acm:ap-northeast-2:381492264714:certificate/739ca4b4-1397-4989-a835-17f087f86758
      certificateName: '*.mug-space.io'
      stage: ${opt:stage, 'prod'}
      createRoute53Record: true
      endPointType: REGIONAL
      securityPolicy: tls_1_2
    - domainName: s.mug-space.io
      basePath: ''
      certificateArn: arn:aws:acm:ap-northeast-2:381492264714:certificate/739ca4b4-1397-4989-a835-17f087f86758
      certificateName: '*.mug-space.io'
      stage: ${opt:stage, 'prod'}
      createRoute53Record: true
      endPointType: REGIONAL
      securityPolicy: tls_1_2


package:
  patterns:
    - '!.git/**'
    - '!src/**'
    - '!node_modules/@types/**'
    - '!node_modules/serverless/**'
    - '!node_modules/.cache/**'
    - '!node_modules/aws-sdk/**'

provider:
  name: aws
  architecture: arm64
  runtime: nodejs20.x
  memorySize: 512
  timeout: 900
  environment:
    STAGE: ${opt:stage, 'prod'}
    NODE_ENV: production
  region: ap-northeast-2
  stage: ${opt:stage, 'prod'}
  deploymentBucket:
    name: mug-space-server-lambda-${opt:stage, 'prod'}

  # ecr:
  #   images:
  #     latest:
  #       path: ./
  #       # platform: linux/amd64
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "secretsmanager:GetSecretValue"
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:DeleteObject"
            - lambda:InvokeFunction
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "acm:ListCertificates"
            - "acm:DescribeCertificate"
          Resource: "*"
  apiGateway:
    binaryMediaTypes:
      - '*/*'

functions:
  api:
    handler: dist/lambda.handler
    package:
      patterns:
        - '!.git/**'
        - '!src/**'
        - '!node_modules/@types/**'
        - '!node_modules/serverless/**'
        - '!node_modules/serverless-domain-manager/**'
        - '!node_modules/.cache/**'
        - '!node_modules/.yarn/**'
        - '!node_modules/aws-sdk/**'
        - '!node_modules/@nestjs/cli/**'
        - '!node_modules/eslint/**'
        - '!node_modules/eslint-plugin-import-newlines/**'
        - '!node_modules/ts-node/**'
        - '!node_modules/source-map-support/**'
        - '!node_modules/typescript/**'
    # image:
    #   name: latest
      # entryPoint:
      #   - '/lambda-entrypoint.sh'
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

